server.port=8080

# Database Configuration (using environment variables for PostgreSQL)
spring.datasource.url=${DATABASE_URL}
spring.datasource.username=${DATABASE_USERNAME}
spring.datasource.password=${DATABASE_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true

# Optional: Connection pool settings for HikariCP (recommended for production)
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.idle-timeout=600000
spring.datasource.hikari.max-lifetime=1800000

# JWT Secret (using environment variable)
jwt.secret=${JWT_SECRET}

# Email Configuration (using environment variables for sensitive parts)
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=${MAIL_USERNAME}
spring.mail.password=${MAIL_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.ssl.trust=smtp.gmail.com
spring.mail.properties.mail.debug=true

# Resume Storage (IMPORTANT: /tmp is ephemeral on Render. Consider cloud storage like S3!)
# For now, keeping it, but be aware of data loss on restart/redeploy.
pdf.storage.directory=/tmp/resumes

# Application Recipient Email (optional: move to env var if it changes per environment)
placement.portal.application.recipient-email=${APPLICATION_RECIPIENT_EMAIL}

# --- Database Connection Pool Configuration ---

# This is the most important line. It disables prepared statement caching.
spring.datasource.hikari.data-source-properties.prepareThreshold=0

# This is a good practice to add for performance with PgBouncer
spring.datasource.hikari.data-source-properties.preparedStatementCacheQueries=0